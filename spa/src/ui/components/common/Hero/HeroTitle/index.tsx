import Box from "@material-ui/core/Box";
import { createStyles, makeStyles, Theme } from "@material-ui/core/styles";
import * as React from "react";
import { animated, useSprings } from "react-spring";

export declare type HeroTitleAnimationItem = {
  key: number;
  length: number;
  d: string;
};

const useStyles = makeStyles((theme: Theme) =>
  createStyles({
    root: {
      textAlign: "center",
    },
  })
);

const HeroTitle: React.FunctionComponent<{}> = (props) => {
  const classes = useStyles();

  /**
   * svg path animation logic:
   *
   * desc:
   *  start the following animation in the order:
   *    1. stroke animation: use strokeDashArray (e.g., specify how much space you need for the dash line)
   *      - strokeDashArray: set a value which is big enough to hide all stroke. (don't animate this value)
   *      - strokeDashOffset: change the starting point of the dash line. (animate this)
   *    2. fill & fillOpacity animation: only animate fillOpacity vlaue (0 => 1) and base color is based on the fill color.
   *
   * steps:
   *  1. create svg for each letter. (can use figma)
   *    - you don't need to set stroke.
   *  2. combine these svgs to position properly (figma)
   *  3. extract each path of these svgs
   *  4. put those into this array (e.g., HeroTitleAnimationList)
   *  5. define necessary fields (e.g., length: strokeDashArray)
   *  6. the 2nd argument object in useSprings contains the information about 1) and 2) animation for each letter.
   *  7. render the animated components.
   *
   */

  const HeroTitleAnimationList: HeroTitleAnimationItem[] = [
    {
      /** 's' **/
      key: 0,
      length: 200.42,
      d: "M26.0081 17.68C25.9601 18.88 25.9361 20.152 25.9361 21.496C25.9841 22.792 26.1041 24.064 26.2961 25.312C24.9041 26.176 23.0801 26.608 20.8241 26.608C20.6321 24.784 19.9601 23.176 18.8081 21.784C17.7041 20.392 16.0721 19.696 13.9121 19.696C12.8081 19.696 11.9201 19.984 11.2481 20.56C10.5761 21.136 10.2401 21.88 10.2401 22.792C10.2401 23.464 10.4081 24.088 10.7441 24.664C11.0801 25.192 11.8001 25.792 12.9041 26.464C14.0081 27.088 15.7361 27.88 18.0881 28.84C20.8241 29.944 22.9601 31 24.4961 32.008C26.0321 32.968 27.1121 34.048 27.7361 35.248C28.4081 36.448 28.7441 37.84 28.7441 39.424C28.7441 42.688 27.3761 45.208 24.6401 46.984C21.9521 48.76 18.3041 49.648 13.6961 49.648C10.7201 49.648 8.27208 49.432 6.35208 49C4.43208 48.568 2.56008 47.944 0.736084 47.128C0.928084 45.832 1.02408 44.32 1.02408 42.592C1.02408 40.816 0.952084 39.352 0.808084 38.2C1.48008 37.816 2.34408 37.528 3.40008 37.336C4.45608 37.096 5.46408 36.976 6.42408 36.976C6.71208 39.664 7.48008 41.68 8.72808 43.024C10.0241 44.368 11.6561 45.04 13.6241 45.04C15.0641 45.04 16.2161 44.728 17.0801 44.104C17.9441 43.432 18.3761 42.544 18.3761 41.44C18.3761 40.336 17.9201 39.4 17.0081 38.632C16.1441 37.864 14.2961 36.904 11.4641 35.752C9.20808 34.888 7.28808 34 5.70408 33.088C4.16808 32.176 2.99208 31.072 2.17608 29.776C1.40808 28.432 1.02408 26.728 1.02408 24.664C1.02408 22.552 1.64808 20.824 2.89608 19.48C4.19208 18.088 5.84808 17.056 7.86408 16.384C9.92808 15.712 12.1361 15.376 14.4881 15.376C17.0321 15.376 19.1921 15.568 20.9681 15.952C22.7441 16.336 24.4241 16.912 26.0081 17.68Z",
    },
    {
      /** 't' **/
      key: 1,
      length: 400.64,
      d: "M45.2 49.6481C41.84 49.6481 39.32 48.7841 37.64 47.0561C36.008 45.3281 35.192 42.4241 35.192 38.3441V22.1441C33.8 21.6161 32.024 21.3041 29.864 21.2081C29.864 20.3441 29.912 19.5761 30.008 18.9041C30.152 18.2321 30.392 17.5121 30.728 16.7441H35.192V7.88811C36.776 7.64811 38.336 7.21611 39.872 6.59211C41.408 5.92011 42.68 5.17611 43.688 4.36011C44.36 4.64811 44.816 5.08011 45.056 5.65611C45.296 6.18411 45.416 7.21611 45.416 8.75211V16.7441H54.272C54.272 17.6081 54.2 18.4241 54.056 19.1921C53.96 19.9121 53.816 20.6081 53.624 21.2801C50.408 21.3281 47.672 21.6881 45.416 22.3601V37.1201C45.416 40.0481 45.728 42.0161 46.352 43.0241C46.976 44.0321 47.912 44.5361 49.16 44.5361C50.792 44.5361 52.28 44.1281 53.624 43.3121C54.296 44.1761 54.656 45.3521 54.704 46.8401C53.744 47.6561 52.376 48.3281 50.6 48.8561C48.824 49.3841 47.024 49.6481 45.2 49.6481Z",
    },
    {
      /** 's' **/
      key: 2,
      length: 200.42,
      d: "M82.0081 17.68C81.9601 18.88 81.9361 20.152 81.9361 21.496C81.9841 22.792 82.1041 24.064 82.2961 25.312C80.9041 26.176 79.0801 26.608 76.8241 26.608C76.6321 24.784 75.9601 23.176 74.8081 21.784C73.7041 20.392 72.0721 19.696 69.9121 19.696C68.8081 19.696 67.9201 19.984 67.2481 20.56C66.5761 21.136 66.2401 21.88 66.2401 22.792C66.2401 23.464 66.4081 24.088 66.7441 24.664C67.0801 25.192 67.8001 25.792 68.9041 26.464C70.0081 27.088 71.7361 27.88 74.0881 28.84C76.8241 29.944 78.9601 31 80.4961 32.008C82.0321 32.968 83.1121 34.048 83.7361 35.248C84.4081 36.448 84.7441 37.84 84.7441 39.424C84.7441 42.688 83.3761 45.208 80.6401 46.984C77.9521 48.76 74.3041 49.648 69.6961 49.648C66.7201 49.648 64.2721 49.432 62.3521 49C60.4321 48.568 58.5601 47.944 56.7361 47.128C56.9281 45.832 57.0241 44.32 57.0241 42.592C57.0241 40.816 56.9521 39.352 56.8081 38.2C57.4801 37.816 58.3441 37.528 59.4001 37.336C60.4561 37.096 61.4641 36.976 62.4241 36.976C62.7121 39.664 63.4801 41.68 64.7281 43.024C66.0241 44.368 67.6561 45.04 69.6241 45.04C71.0641 45.04 72.2161 44.728 73.0801 44.104C73.9441 43.432 74.3761 42.544 74.3761 41.44C74.3761 40.336 73.9201 39.4 73.0081 38.632C72.1441 37.864 70.2961 36.904 67.4641 35.752C65.2081 34.888 63.2881 34 61.7041 33.088C60.1681 32.176 58.9921 31.072 58.1761 29.776C57.4081 28.432 57.0241 26.728 57.0241 24.664C57.0241 22.552 57.6481 20.824 58.8961 19.48C60.1921 18.088 61.8481 17.056 63.8641 16.384C65.9281 15.712 68.1361 15.376 70.4881 15.376C73.0321 15.376 75.1921 15.568 76.9681 15.952C78.7441 16.336 80.4241 16.912 82.0081 17.68Z",
    },
    {
      /** 'D' **/
      key: 3,
      length: 380.8,
      d: "M86.0239 49.2161C86.0239 48.3521 86.0719 47.5361 86.1679 46.7681C86.2639 46.0001 86.3839 45.3521 86.5279 44.8241C87.8239 44.7281 88.8079 44.4881 89.4799 44.1041C90.1999 43.6721 90.7039 42.9281 90.9919 41.8721C91.2799 40.8161 91.4239 39.2561 91.4239 37.1921V11.6321C91.4239 9.76006 91.2799 8.34406 90.9919 7.38406C90.7519 6.37606 90.2719 5.68006 89.5519 5.29606C88.8319 4.91206 87.8239 4.64806 86.5279 4.50406C86.3839 3.97606 86.2639 3.28006 86.1679 2.41606C86.1199 1.55206 86.0959 0.78406 86.0959 0.112061C87.0559 0.16006 88.2559 0.208059 89.6959 0.256059C91.1359 0.256059 92.6479 0.280058 94.2319 0.328058C95.8159 0.328058 97.3279 0.328058 98.7679 0.328058C99.9679 0.328058 101.216 0.304058 102.512 0.256059C103.856 0.208059 105.272 0.18406 106.76 0.18406C110.12 0.18406 113.384 0.49606 116.552 1.12006C119.72 1.69606 122.576 2.80006 125.12 4.43206C127.664 6.06406 129.68 8.41606 131.168 11.4881C132.656 14.5121 133.4 18.4961 133.4 23.4401C133.4 28.0961 132.728 31.9841 131.384 35.1041C130.04 38.1761 128.288 40.6481 126.128 42.5201C124.016 44.3921 121.736 45.8081 119.288 46.7681C116.84 47.6801 114.488 48.2801 112.232 48.5681C109.976 48.8561 108.104 49.0001 106.616 49.0001C105.32 49.0001 103.688 49.0001 101.72 49.0001C99.7519 49.0481 97.7359 49.0721 95.6719 49.0721C93.6079 49.0721 91.6879 49.0721 89.9119 49.0721C88.1839 49.1201 86.8879 49.1681 86.0239 49.2161ZM108.2 44.6081C109.832 44.6081 111.464 44.3681 113.096 43.8881C114.776 43.3601 116.288 42.4001 117.632 41.0081C119.024 39.5681 120.128 37.5281 120.944 34.8881C121.808 32.2481 122.24 28.8401 122.24 24.6641C122.24 20.7761 121.784 17.5361 120.872 14.9441C120.008 12.3041 118.808 10.2161 117.272 8.68006C115.784 7.09606 114.08 5.96806 112.16 5.29606C110.24 4.62406 108.248 4.28806 106.184 4.28806C104.696 4.28806 103.352 4.50406 102.152 4.93606V37.0481C102.152 40.0241 102.56 42.0401 103.376 43.0961C104.192 44.1041 105.8 44.6081 108.2 44.6081Z",
    },
    {
      /** 'e' **/
      key: 4,
      length: 200.64,
      d: "M153.872 49.648C149.792 49.648 146.48 48.904 143.936 47.416C141.392 45.928 139.52 43.912 138.32 41.368C137.12 38.776 136.52 35.896 136.52 32.728C136.52 29.32 137.192 26.32 138.536 23.728C139.88 21.136 141.8 19.096 144.296 17.608C146.792 16.12 149.744 15.376 153.152 15.376C156.608 15.376 159.416 16.048 161.576 17.392C163.784 18.688 165.416 20.512 166.472 22.864C167.528 25.168 168.128 27.784 168.272 30.712C167.936 32.104 167.336 33.232 166.472 34.096C165.032 34.096 163.232 34.12 161.072 34.168C158.96 34.168 156.68 34.192 154.232 34.24C151.832 34.288 149.48 34.384 147.176 34.528C147.56 37.312 148.496 39.64 149.984 41.512C151.52 43.336 153.872 44.248 157.04 44.248C158.672 44.248 160.304 43.96 161.936 43.384C163.616 42.76 165.008 41.92 166.112 40.864C166.592 41.104 167 41.584 167.336 42.304C167.72 43.024 167.912 43.744 167.912 44.464C164.36 47.92 159.68 49.648 153.872 49.648ZM153.008 19.84C151.328 19.84 149.912 20.632 148.76 22.216C147.656 23.8 147.056 26.368 146.96 29.92H158.48C158.48 26.704 158 24.232 157.04 22.504C156.08 20.728 154.736 19.84 153.008 19.84Z",
    },
    {
      /** 'v' **/
      key: 5,
      length: 200,
      d: "M185.352 48.6481C184.68 46.9681 183.816 44.9761 182.76 42.6721C181.704 40.3201 180.6 37.8961 179.448 35.4001C178.344 32.9041 177.288 30.6001 176.28 28.4881C175.32 26.3761 174.528 24.7441 173.904 23.5921C173.04 21.8641 172.32 20.7601 171.744 20.2801C171.216 19.7521 170.472 19.3921 169.512 19.2001C169.08 17.8561 168.864 16.3921 168.864 14.8081C169.968 14.8561 171.336 14.9041 172.968 14.9521C174.648 15.0001 176.448 15.0241 178.368 15.0241C180.24 15.0241 182.184 15.0001 184.2 14.9521C186.216 14.9041 187.8 14.8561 188.952 14.8081C188.952 15.5281 188.88 16.2961 188.736 17.1121C188.592 17.9281 188.424 18.6001 188.232 19.1281C186.264 19.3201 185.112 19.7281 184.776 20.3521C184.44 20.9761 184.704 22.1761 185.568 23.9521C186.336 25.5841 187.224 27.6721 188.232 30.2161C189.288 32.7121 190.272 35.2561 191.184 37.8481C192.096 35.5441 192.936 33.4321 193.704 31.5121C194.52 29.5921 195.336 27.6721 196.152 25.7521C197.112 23.3521 197.376 21.7201 196.944 20.8561C196.512 19.9441 195.48 19.3921 193.848 19.2001C193.608 18.6241 193.416 17.9521 193.272 17.1841C193.128 16.3681 193.056 15.5761 193.056 14.8081C193.968 14.8561 195.024 14.9041 196.224 14.9521C197.472 15.0001 198.744 15.0241 200.04 15.0241C201.336 15.0241 202.608 15.0001 203.856 14.9521C205.104 14.9041 206.208 14.8561 207.168 14.8081C207.168 15.6241 207.096 16.4401 206.952 17.2561C206.856 18.0241 206.664 18.6721 206.376 19.2001C205.176 19.4881 204.216 20.0641 203.496 20.9281C202.776 21.7441 201.984 23.2321 201.12 25.3921L191.184 47.7841C190.512 48.1201 189.624 48.3601 188.52 48.5041C187.416 48.6961 186.36 48.7441 185.352 48.6481Z",
    },
  ];

  const color = "#B8860B";

  const heroTitleSprings = useSprings(
    HeroTitleAnimationList.length,
    HeroTitleAnimationList.map((item: HeroTitleAnimationItem) => ({
      delay: 1000,
      from: { x: item.length, fill: color, fillOpacity: 0 },
      to: async (next: any, cancel: any) => {
        await next({
          x: 0,
          config: { duration: 2000 },
        });
        await next({
          fillOpacity: 1,
          config: { duration: 2000 },
        });
      },
    }))
  );

  return (
    <Box className={classes.root}>
      <svg
        width="221"
        height="52"
        viewBox="0 0 221 52"
        xmlns="http://www.w3.org/2000/svg"
      >
        {HeroTitleAnimationList.map(
          (item: HeroTitleAnimationItem, index: number) => {
            return (
              <animated.path
                key={heroTitleSprings[index].key}
                stroke={color}
                strokeDashoffset={heroTitleSprings[index].x}
                strokeDasharray={item.length}
                d={item.d}
                strokeWidth="2"
                fill={heroTitleSprings[index].fill}
                fill-opacity={heroTitleSprings[index].fillOpacity}
              />
            );
          }
        )}
      </svg>
    </Box>
  );
};

export default HeroTitle;
