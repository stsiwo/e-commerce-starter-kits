<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.iwaodev</groupId>
  <artifactId>api</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>api</name>
  <url>http://maven.apache.org</url>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!--
         - must be 1.8 or above
         - otherwise, you get compiler error: [Java] Lambda expressions are allowed only at source level 1.8 or above
    -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <org.springframework.boot.version>2.4.3</org.springframework.boot.version>
    <org.mapstruct.version>1.4.2.Final</org.mapstruct.version>
    <org.lombok.version>1.18.16</org.lombok.version>
    <org.lombok.maven.plugin.version>1.18.16.0</org.lombok.maven.plugin.version>
    <com.stripe.version>20.46.0</com.stripe.version>
    <org.codehaus.mojo.jaxb2.version>2.5.0</org.codehaus.mojo.jaxb2.version>
    <cxf.version>3.4.2</cxf.version>
    <xerces.version>2.12.0</xerces.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${org.springframework.boot.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <version>${org.springframework.boot.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
      <version>${org.springframework.boot.version}</version>
    </dependency>

   <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
      <version>${org.springframework.boot.version}</version>
    </dependency>


    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
      <version>${org.springframework.boot.version}</version>
    </dependency>

    <!-- validation package is excluded since Spring Boot 2.3 -->
    <!-- you need to explicitly set this -->
    <!-- ref: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3-Release-Notes#validation-starter-no-longer-included-in-web-starters -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
      <version>${org.springframework.boot.version}</version>
    </dependency>

    <!-- jwt stuff -->
    <!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt -->
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>0.9.1</version>
    </dependency>

    <!-- necessary for any Java 9+ since it is removed from its jdk-->
    <!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.3.1</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
    <!-- you need this otherwise Java.lang.NoClassDefFoundError: com/fasterxml/jackson/databind/exc/InvalidDefinitionException -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.12.1</version>
    </dependency>

    <!-- mapstruct to map entity to dto and so on -->
    <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${org.mapstruct.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.23</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310 -->
    <!-- jackson does not support Java 8 LocalDatetime by default, so need to add this -->
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>2.12.1</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml -->
    <!-- to parse xml (esp. Canada Post API response -->
    <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-xml</artifactId>
        <version>2.12.2</version>
    </dependency>

    <!-- stripe integration library with java -->
    <dependency>
      <groupId>com.stripe</groupId>
      <artifactId>stripe-java</artifactId>
      <version>${com.stripe.version}</version>
    </dependency>

    <!-- spring boot devtools -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <version>${org.springframework.boot.version}</version>
      <optional>true</optional>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
    <!-- need this only for JsonSyntaxException. maybe I don't need this and there is better way to handle this. -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.6</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.codehaus.mojo/jaxb2-maven-plugin -->
    <!-- automate genearting POJOs based on the xml schema -->
    <dependency>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jaxb2-maven-plugin</artifactId>
        <version>${org.codehaus.mojo.jaxb2.version}</version>
    </dependency>

    <!-- nanoid (short version of uuid: better performance) -->
    <dependency>
      <groupId>com.aventrix.jnanoid</groupId>
      <artifactId>jnanoid</artifactId>
      <version>2.0.0</version>
    </dependency>

    <!-- TESTING -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${org.springframework.boot.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <version>5.4.5</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.github.javafaker</groupId>
      <artifactId>javafaker</artifactId>
      <version>1.0.2</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.200</version>
      <scope>test</scope>
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-jpamodelgen -->
    <!-- 
         this is to create jpa 2 meta model used by JAP Specification 
         this dependency is used when maven build and create jpa 2 meta model. see plugins.
    -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-jpamodelgen</artifactId>
      <version>5.4.29.Final</version>
    </dependency>

    <!-- auto generate getter/setter and other boilerplate -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${org.lombok.version}</version>
      <scope>provided</scope>
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok-maven-plugin -->
    <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-maven-plugin</artifactId>
        <version>${org.lombok.maven.plugin.version}</version>
        <scope>provided</scope>
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
    <dependency>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.6</version>
    </dependency>


  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <!--
               - must be 1.8 or above
               - otherwise, you get compiler error: [Java] Lambda expressions are allowed only at source level 1.8 or above
          -->
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
            <!-- you can add multiple processor by using 'annotationProcessorPaths' -->
            <annotationProcessorPaths>
              <!-- this is to create jpa 2 meta model used by JAP Specification -->
              <path>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-jpamodelgen</artifactId>
                <version>5.4.29.Final</version>
              </path>
              <!-- this is to create setters/getters and other boiler plate -->
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${org.lombok.version}</version>
              </path>
              <!-- this is for mapstruct to map entity to dto and so on -->
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${org.mapstruct.version}</version>
              </path>
            </annotationProcessorPaths>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
        </plugin>

        <!-- you need to define this otherwise, you get following error when compile 'rating.xsd' and 'discovery.xsd' together -->
        <!-- error: DTD factory class org.apache.xerces.impl.dv.dtd.DTDDVFactoryImpl does not extend from DTDDVFactory. -->
        <!-- ref: http://maven.40175.n5.nabble.com/Problem-with-jaxb2-maven-plugin-1-2-td5080568.html -->
        <!-- ref: https://stackoverflow.com/questions/5833559/maven-org-apache-xerces-impl-dv-dvfactoryexception -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>jaxb2-maven-plugin</artifactId>
          <version>${org.codehaus.mojo.jaxb2.version}</version>
          <dependencies>
              <dependency>
                  <groupId>xerces</groupId>
                  <artifactId>xercesImpl</artifactId>
                  <version>${xerces.version}</version>
              </dependency>
          </dependencies>
        </plugin>

        <!-- code coverage -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.6</version>
          <executions>
              <execution>
                  <goals>
                      <goal>prepare-agent</goal>
                  </goals>
              </execution>
              <!-- attached to Maven test phase -->
              <execution>
                  <id>report</id>
                  <phase>test</phase>
                  <goals>
                      <goal>report</goal>
                  </goals>
              </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>
    <!-- you need to define <plugins> like below when you want to generate pojos from xsd (esp, after <pluginManagement> -->
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jaxb2-maven-plugin</artifactId>
        <version>${org.codehaus.mojo.jaxb2.version}</version>
        <executions>
          <execution>
            <id>xjc-rating</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/resources/shipping/schema/rating.xsd</source>
              </sources>
              <packageName>com.iwaodev.infrastructure.shipping.schema.rating</packageName>
              <extension>true</extension>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>
          <execution>
            <id>xjc-messages</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/resources/shipping/schema/messages.xsd</source>
              </sources>
              <packageName>com.iwaodev.infrastructure.shipping.schema.messages</packageName>
              <extension>true</extension>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>
          <execution>
            <id>xjc-common</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/resources/shipping/schema/common.xsd</source>
              </sources>
              <packageName>com.iwaodev.infrastructure.shipping.schema.common</packageName>
              <extension>true</extension>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>
          <execution>
            <id>xjc-discovery</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/resources/shipping/schema/discovery.xsd</source>
              </sources>
              <packageName>com.iwaodev.infrastructure.shipping.schema.discovery</packageName>
              <extension>true</extension>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>
          <execution>
            <id>xjc-ncshipment</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/resources/shipping/schema/ncshipment.xsd</source>
              </sources>
              <packageName>com.iwaodev.infrastructure.shipping.schema.ncshipment</packageName>
              <extension>true</extension>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>
          <execution>
            <id>xjc-authreturn</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/resources/shipping/schema/authreturn.xsd</source>
              </sources>
              <packageName>com.iwaodev.infrastructure.shipping.schema.authreturn</packageName>
              <extension>true</extension>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>
          <execution>
            <id>xjc-openreturn</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/resources/shipping/schema/openreturn.xsd</source>
              </sources>
              <packageName>com.iwaodev.infrastructure.shipping.schema.openreturn</packageName>
              <extension>true</extension>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-maven-plugin</artifactId>
        <version>${org.lombok.maven.plugin.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>delombok</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
